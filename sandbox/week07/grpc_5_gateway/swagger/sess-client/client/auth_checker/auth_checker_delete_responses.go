// Code generated by go-swagger; DO NOT EDIT.

package auth_checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"week07/grpc_5_gateway/swagger/sess-client/models"
)

// AuthCheckerDeleteReader is a Reader for the AuthCheckerDelete structure.
type AuthCheckerDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthCheckerDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthCheckerDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuthCheckerDeleteDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthCheckerDeleteOK creates a AuthCheckerDeleteOK with default headers values
func NewAuthCheckerDeleteOK() *AuthCheckerDeleteOK {
	return &AuthCheckerDeleteOK{}
}

/*
AuthCheckerDeleteOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthCheckerDeleteOK struct {
	Payload *models.Grpc5GatewayNothing
}

// IsSuccess returns true when this auth checker delete o k response has a 2xx status code
func (o *AuthCheckerDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this auth checker delete o k response has a 3xx status code
func (o *AuthCheckerDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth checker delete o k response has a 4xx status code
func (o *AuthCheckerDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this auth checker delete o k response has a 5xx status code
func (o *AuthCheckerDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this auth checker delete o k response a status code equal to that given
func (o *AuthCheckerDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the auth checker delete o k response
func (o *AuthCheckerDeleteOK) Code() int {
	return 200
}

func (o *AuthCheckerDeleteOK) Error() string {
	return fmt.Sprintf("[POST /v1/session/delete][%d] authCheckerDeleteOK  %+v", 200, o.Payload)
}

func (o *AuthCheckerDeleteOK) String() string {
	return fmt.Sprintf("[POST /v1/session/delete][%d] authCheckerDeleteOK  %+v", 200, o.Payload)
}

func (o *AuthCheckerDeleteOK) GetPayload() *models.Grpc5GatewayNothing {
	return o.Payload
}

func (o *AuthCheckerDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Grpc5GatewayNothing)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthCheckerDeleteDefault creates a AuthCheckerDeleteDefault with default headers values
func NewAuthCheckerDeleteDefault(code int) *AuthCheckerDeleteDefault {
	return &AuthCheckerDeleteDefault{
		_statusCode: code,
	}
}

/*
AuthCheckerDeleteDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AuthCheckerDeleteDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this auth checker delete default response has a 2xx status code
func (o *AuthCheckerDeleteDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this auth checker delete default response has a 3xx status code
func (o *AuthCheckerDeleteDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this auth checker delete default response has a 4xx status code
func (o *AuthCheckerDeleteDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this auth checker delete default response has a 5xx status code
func (o *AuthCheckerDeleteDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this auth checker delete default response a status code equal to that given
func (o *AuthCheckerDeleteDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the auth checker delete default response
func (o *AuthCheckerDeleteDefault) Code() int {
	return o._statusCode
}

func (o *AuthCheckerDeleteDefault) Error() string {
	return fmt.Sprintf("[POST /v1/session/delete][%d] AuthChecker_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *AuthCheckerDeleteDefault) String() string {
	return fmt.Sprintf("[POST /v1/session/delete][%d] AuthChecker_Delete default  %+v", o._statusCode, o.Payload)
}

func (o *AuthCheckerDeleteDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *AuthCheckerDeleteDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
