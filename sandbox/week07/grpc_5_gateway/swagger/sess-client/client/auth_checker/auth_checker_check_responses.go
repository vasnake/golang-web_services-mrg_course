// Code generated by go-swagger; DO NOT EDIT.

package auth_checker

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"week07/grpc_5_gateway/swagger/sess-client/models"
)

// AuthCheckerCheckReader is a Reader for the AuthCheckerCheck structure.
type AuthCheckerCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthCheckerCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthCheckerCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewAuthCheckerCheckDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAuthCheckerCheckOK creates a AuthCheckerCheckOK with default headers values
func NewAuthCheckerCheckOK() *AuthCheckerCheckOK {
	return &AuthCheckerCheckOK{}
}

/*
AuthCheckerCheckOK describes a response with status code 200, with default header values.

A successful response.
*/
type AuthCheckerCheckOK struct {
	Payload *models.Grpc5GatewaySession
}

// IsSuccess returns true when this auth checker check o k response has a 2xx status code
func (o *AuthCheckerCheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this auth checker check o k response has a 3xx status code
func (o *AuthCheckerCheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this auth checker check o k response has a 4xx status code
func (o *AuthCheckerCheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this auth checker check o k response has a 5xx status code
func (o *AuthCheckerCheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this auth checker check o k response a status code equal to that given
func (o *AuthCheckerCheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the auth checker check o k response
func (o *AuthCheckerCheckOK) Code() int {
	return 200
}

func (o *AuthCheckerCheckOK) Error() string {
	return fmt.Sprintf("[GET /v1/session/check/{ID}][%d] authCheckerCheckOK  %+v", 200, o.Payload)
}

func (o *AuthCheckerCheckOK) String() string {
	return fmt.Sprintf("[GET /v1/session/check/{ID}][%d] authCheckerCheckOK  %+v", 200, o.Payload)
}

func (o *AuthCheckerCheckOK) GetPayload() *models.Grpc5GatewaySession {
	return o.Payload
}

func (o *AuthCheckerCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Grpc5GatewaySession)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthCheckerCheckDefault creates a AuthCheckerCheckDefault with default headers values
func NewAuthCheckerCheckDefault(code int) *AuthCheckerCheckDefault {
	return &AuthCheckerCheckDefault{
		_statusCode: code,
	}
}

/*
AuthCheckerCheckDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type AuthCheckerCheckDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this auth checker check default response has a 2xx status code
func (o *AuthCheckerCheckDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this auth checker check default response has a 3xx status code
func (o *AuthCheckerCheckDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this auth checker check default response has a 4xx status code
func (o *AuthCheckerCheckDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this auth checker check default response has a 5xx status code
func (o *AuthCheckerCheckDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this auth checker check default response a status code equal to that given
func (o *AuthCheckerCheckDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the auth checker check default response
func (o *AuthCheckerCheckDefault) Code() int {
	return o._statusCode
}

func (o *AuthCheckerCheckDefault) Error() string {
	return fmt.Sprintf("[GET /v1/session/check/{ID}][%d] AuthChecker_Check default  %+v", o._statusCode, o.Payload)
}

func (o *AuthCheckerCheckDefault) String() string {
	return fmt.Sprintf("[GET /v1/session/check/{ID}][%d] AuthChecker_Check default  %+v", o._statusCode, o.Payload)
}

func (o *AuthCheckerCheckDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *AuthCheckerCheckDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
